{"ast":null,"code":"import _asyncToGenerator from\"/home/cedcoss/Desktop/MyApp/liquidTestApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/cedcoss/Desktop/MyApp/liquidTestApp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/cedcoss/Desktop/MyApp/liquidTestApp/node_modules/@babel/runtime/regenerator/index.js\";import QuestionsList from\"./QuestionsList\";import React,{useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var QuestionListing=function QuestionListing(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),questions=_useState2[0],setQuestions=_useState2[1];var fetchQues=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(taskText){var response,data,loadedQuestions,quesKey;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch('https://react-app-38291-default-rtdb.firebaseio.com/questions.json');case 3:response=_context.sent;if(response.ok){_context.next=6;break;}throw new Error('Request failed!');case 6:_context.next=8;return response.json();case 8:data=_context.sent;loadedQuestions=[];for(quesKey in data){loadedQuestions.push({id:quesKey,question:data[quesKey].data});}setQuestions(loadedQuestions);_context.next=16;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);case 16:case\"end\":return _context.stop();}}},_callee,null,[[0,14]]);}));return function fetchQues(_x){return _ref.apply(this,arguments);};}();useEffect(function(){fetchQues();},[]);return/*#__PURE__*/_jsx(React.Fragment,{children:questions.length>0?/*#__PURE__*/_jsx(QuestionsList,{questions:questions}):\"\"});};export default QuestionListing;","map":{"version":3,"sources":["/home/cedcoss/Desktop/MyApp/liquidTestApp/src/components/Admin/QuestionListing.js"],"names":["QuestionsList","React","useState","useEffect","QuestionListing","questions","setQuestions","fetchQues","taskText","fetch","response","ok","Error","json","data","loadedQuestions","quesKey","push","id","question","length"],"mappings":"gYAAA,MAAOA,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,C,2CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC1B,cAAkCF,QAAQ,CAAC,EAAD,CAA1C,wCAAOG,SAAP,eAAkBC,YAAlB,eACA,GAAMC,CAAAA,SAAS,0FAAG,iBAAOC,QAAP,kMAESC,CAAAA,KAAK,CACxB,oEADwB,CAFd,QAERC,QAFQ,kBAMTA,QAAQ,CAACC,EANA,8BAOJ,IAAIC,CAAAA,KAAJ,CAAU,iBAAV,CAPI,8BAUKF,CAAAA,QAAQ,CAACG,IAAT,EAVL,QAURC,IAVQ,eAYRC,eAZQ,CAYU,EAZV,CAcd,IAAWC,OAAX,GAAsBF,CAAAA,IAAtB,CAA4B,CACxBC,eAAe,CAACE,IAAhB,CAAqB,CAAEC,EAAE,CAAEF,OAAN,CAAeG,QAAQ,CAAEL,IAAI,CAACE,OAAD,CAAJ,CAAcF,IAAvC,CAArB,EACH,CACDR,YAAY,CAACS,eAAD,CAAZ,CAjBc,sJAAH,kBAATR,CAAAA,SAAS,4CAAf,CAsBAJ,SAAS,CAAC,UAAM,CACZI,SAAS,GACZ,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACI,KAAC,KAAD,CAAO,QAAP,WACCF,SAAS,CAACe,MAAV,CAAmB,CAAnB,cAAuB,KAAC,aAAD,EAAe,SAAS,CAAEf,SAA1B,EAAvB,CAAgE,EADjE,EADJ,CAKH,CAjCD,CAkCA,cAAeD,CAAAA,eAAf","sourcesContent":["import QuestionsList from \"./QuestionsList\";\nimport React, { useState, useEffect } from \"react\";\n\nconst QuestionListing = () => {\n    const [questions, setQuestions] = useState([]);\n    const fetchQues = async (taskText) => {\n        try {\n        const response = await fetch(\n            'https://react-app-38291-default-rtdb.firebaseio.com/questions.json'\n        );\n\n        if (!response.ok) {\n            throw new Error('Request failed!');\n        }\n\n        const data = await response.json();\n\n        const loadedQuestions = [];\n\n        for (const quesKey in data) {\n            loadedQuestions.push({ id: quesKey, question: data[quesKey].data });\n        }\n        setQuestions(loadedQuestions);\n        } catch (err) {\n          //setError(err.message || 'Something went wrong!');\n        }\n    };\n    useEffect(() => {\n        fetchQues();\n    }, []);\n    \n    return(\n        <React.Fragment>\n        {questions.length > 0 ? <QuestionsList questions={questions}/> : \"\"}\n        </React.Fragment>\n    );\n}\nexport default QuestionListing;"]},"metadata":{},"sourceType":"module"}