{"ast":null,"code":"import _asyncToGenerator from\"/home/cedcoss/Desktop/MyApp/liquidTestApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/cedcoss/Desktop/MyApp/liquidTestApp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/cedcoss/Desktop/MyApp/liquidTestApp/node_modules/@babel/runtime/regenerator/index.js\";import React,{useEffect}from\"react\";import{useState}from\"react/cjs/react.development\";import AddQuestionForm from\"./AddQuestionForm\";import QuestionListing from\"./QuestionListing\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AdminDashboard=function AdminDashboard(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),enableForm=_useState2[0],setEnableForm=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),success=_useState6[0],setSuccess=_useState6[1];var search=window.location.search;useEffect(function(){if(search.includes(\"danish\")||search.includes(\"shubham\")){setEnableForm(true);}},[search]);var addQuestionHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var response,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch('https://react-app-38291-default-rtdb.firebaseio.com/questions.json',{method:'POST',body:JSON.stringify({data:data}),headers:{'Content-Type':'application/json'}});case 3:response=_context.sent;if(response.ok){_context.next=6;break;}throw new Error('Request failed!');case 6:_context.next=8;return response.json();case 8:res=_context.sent;console.log(res);setSuccess(true);setTimeout(function(){setSuccess(false);},3000);_context.next=18;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);setError(true);setTimeout(function(){setError(false);},3000);case 18:case\"end\":return _context.stop();}}},_callee,null,[[0,14]]);}));return function addQuestionHandler(_x){return _ref.apply(this,arguments);};}();var isError=error?\"error\":\"\";var isSuccess=success?\"success\":\"\";return/*#__PURE__*/_jsxs(React.Fragment,{children:[enableForm?/*#__PURE__*/_jsx(AddQuestionForm,{addQuestion:addQuestionHandler,errorMsg:isError,successMsg:isSuccess}):\"\",/*#__PURE__*/_jsx(QuestionListing,{})]});};export default AdminDashboard;","map":{"version":3,"sources":["/home/cedcoss/Desktop/MyApp/liquidTestApp/src/components/Admin/AdminDashboard.js"],"names":["React","useEffect","useState","AddQuestionForm","QuestionListing","AdminDashboard","enableForm","setEnableForm","error","setError","success","setSuccess","search","window","location","includes","addQuestionHandler","data","fetch","method","body","JSON","stringify","headers","response","ok","Error","json","res","console","log","setTimeout","isError","isSuccess"],"mappings":"gYAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,QAAT,KAAyB,6BAAzB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,C,wFAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzB,cAAoCH,QAAQ,CAAC,IAAD,CAA5C,wCAAOI,UAAP,eAAmBC,aAAnB,eACA,eAA0BL,QAAQ,CAAC,KAAD,CAAlC,yCAAOM,KAAP,eAAcC,QAAd,eACA,eAA8BP,QAAQ,CAAC,KAAD,CAAtC,yCAAOQ,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,MAAM,CAAGC,MAAM,CAACC,QAAP,CAAgBF,MAA/B,CACAX,SAAS,CAAC,UAAM,CACZ,GAAGW,MAAM,CAACG,QAAP,CAAgB,QAAhB,GAA6BH,MAAM,CAACG,QAAP,CAAgB,SAAhB,CAAhC,CAA2D,CACvDR,aAAa,CAAC,IAAD,CAAb,CACH,CACJ,CAJQ,CAIN,CAACK,MAAD,CAJM,CAAT,CAMA,GAAMI,CAAAA,kBAAkB,0FAAG,iBAAOC,IAAP,yKAEIC,CAAAA,KAAK,CAC1B,oEAD0B,CAE1B,CACEC,MAAM,CAAE,MADV,CAEEC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEL,IAAI,CAAJA,IAAF,CAAf,CAFR,CAGEM,OAAO,CAAE,CACP,eAAgB,kBADT,CAHX,CAF0B,CAFT,QAEbC,QAFa,kBAadA,QAAQ,CAACC,EAbK,8BAcX,IAAIC,CAAAA,KAAJ,CAAU,iBAAV,CAdW,8BAiBDF,CAAAA,QAAQ,CAACG,IAAT,EAjBC,QAiBbC,GAjBa,eAkBnBC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACAjB,UAAU,CAAC,IAAD,CAAV,CACAoB,UAAU,CAAC,UAAM,CACbpB,UAAU,CAAC,KAAD,CAAV,CACH,CAFS,CAEP,IAFO,CAAV,CApBmB,iFAyBnBF,QAAQ,CAAC,IAAD,CAAR,CACAsB,UAAU,CAAC,UAAM,CACbtB,QAAQ,CAAC,KAAD,CAAR,CACH,CAFS,CAEP,IAFO,CAAV,CA1BmB,qEAAH,kBAAlBO,CAAAA,kBAAkB,4CAAxB,CA+BA,GAAMgB,CAAAA,OAAO,CAAGxB,KAAK,CAAG,OAAH,CAAa,EAAlC,CACA,GAAMyB,CAAAA,SAAS,CAAGvB,OAAO,CAAG,SAAH,CAAe,EAAxC,CAEA,mBACQ,MAAC,KAAD,CAAO,QAAP,YACKJ,UAAU,cAAG,KAAC,eAAD,EAAiB,WAAW,CAAEU,kBAA9B,CAAkD,QAAQ,CAAEgB,OAA5D,CAAqE,UAAU,CAAEC,SAAjF,EAAH,CAAoG,EADnH,cAEI,KAAC,eAAD,IAFJ,GADR,CAMH,CApDD,CAsDA,cAAe5B,CAAAA,cAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport AddQuestionForm from \"./AddQuestionForm\";\nimport QuestionListing from \"./QuestionListing\";\n\nconst AdminDashboard = () => {\n    const [enableForm, setEnableForm] = useState(true);\n    const [error, setError] = useState(false);\n    const [success, setSuccess] = useState(false);\n\n    const search = window.location.search;\n    useEffect(() => {\n        if(search.includes(\"danish\") || search.includes(\"shubham\")){\n            setEnableForm(true);\n        }\n    }, [search]);\n    \n    const addQuestionHandler = async (data) => {\n        try {\n            const response = await fetch(\n              'https://react-app-38291-default-rtdb.firebaseio.com/questions.json',\n              {\n                method: 'POST',\n                body: JSON.stringify({ data }),\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n              }\n            );\n      \n            if (!response.ok) {\n              throw new Error('Request failed!');\n            }\n      \n            const res = await response.json();\n            console.log(res);\n            setSuccess(true);\n            setTimeout(() => {\n                setSuccess(false);\n            }, 3000);\n            \n        } catch (err) {\n            setError(true);\n            setTimeout(() => {\n                setError(false);\n            }, 3000);\n        }\n    }\n    const isError = error ? \"error\" : \"\";\n    const isSuccess = success ? \"success\" : \"\";\n\n    return(\n            <React.Fragment>\n                {enableForm ? <AddQuestionForm addQuestion={addQuestionHandler} errorMsg={isError} successMsg={isSuccess} /> : \"\"}\n                <QuestionListing />\n            </React.Fragment>\n        );\n}\n\nexport default AdminDashboard;"]},"metadata":{},"sourceType":"module"}