{"ast":null,"code":"var _jsxFileName = \"/home/cedcoss/Desktop/test-app/liquidTestApp/src/components/Admin/QuestionListing.js\";\nimport FullWidthSection from \"../UI/SectionMedium\";\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionListing = () => {\n  const fetchQues = async taskText => {\n    try {\n      const response = await fetch('https://react-app-38291-default-rtdb.firebaseio.com/questions.json');\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      const loadedQuestions = [];\n\n      for (const quesKey in data) {\n        loadedQuestions.push({\n          id: quesKey,\n          question: data[quesKey].data\n        });\n      }\n\n      setQuestions(loadedQuestions);\n    } catch (err) {//setError(err.message || 'Something went wrong!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FullWidthSection, {\n    children: /*#__PURE__*/_jsxDEV(Question, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c = QuestionListing;\nexport default QuestionListing;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionListing\");","map":{"version":3,"sources":["/home/cedcoss/Desktop/test-app/liquidTestApp/src/components/Admin/QuestionListing.js"],"names":["FullWidthSection","Question","QuestionListing","fetchQues","taskText","response","fetch","ok","Error","data","json","loadedQuestions","quesKey","push","id","question","setQuestions","err"],"mappings":";AAAA,OAAOA,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC1B,QAAMC,SAAS,GAAG,MAAOC,QAAP,IAAoB;AAClC,QAAI;AACJ,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,oEADwB,CAA5B;;AAIA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACH;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,YAAMC,eAAe,GAAG,EAAxB;;AAEA,WAAK,MAAMC,OAAX,IAAsBH,IAAtB,EAA4B;AACxBE,QAAAA,eAAe,CAACE,IAAhB,CAAqB;AAAEC,UAAAA,EAAE,EAAEF,OAAN;AAAeG,UAAAA,QAAQ,EAAEN,IAAI,CAACG,OAAD,CAAJ,CAAcH;AAAvC,SAArB;AACH;;AACDO,MAAAA,YAAY,CAACL,eAAD,CAAZ;AACC,KAjBD,CAiBE,OAAOM,GAAP,EAAY,CACZ;AACD;AACJ,GArBD;;AAuBA,sBACI,QAAC,gBAAD;AAAA,2BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA7BD;;KAAMf,e;AA8BN,eAAeA,eAAf","sourcesContent":["import FullWidthSection from \"../UI/SectionMedium\";\nimport Question from \"./Question\";\n\nconst QuestionListing = () => {\n    const fetchQues = async (taskText) => {\n        try {\n        const response = await fetch(\n            'https://react-app-38291-default-rtdb.firebaseio.com/questions.json'\n        );\n\n        if (!response.ok) {\n            throw new Error('Request failed!');\n        }\n\n        const data = await response.json();\n\n        const loadedQuestions = [];\n\n        for (const quesKey in data) {\n            loadedQuestions.push({ id: quesKey, question: data[quesKey].data });\n        }\n        setQuestions(loadedQuestions);\n        } catch (err) {\n          //setError(err.message || 'Something went wrong!');\n        }\n    };\n\n    return(\n        <FullWidthSection>\n            <Question />\n        </FullWidthSection>\n    );\n}\nexport default QuestionListing;"]},"metadata":{},"sourceType":"module"}