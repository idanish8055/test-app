{"ast":null,"code":"import Section from'../UI/Section';import TaskItem from'./TaskItem';import classes from'./Tasks.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";var Tasks=function Tasks(props){var taskList=/*#__PURE__*/_jsx(\"h2\",{children:\"No tasks found. Start adding some!\"});if(props.items.length>0){taskList=/*#__PURE__*/_jsx(\"ul\",{children:props.items.map(function(task){return/*#__PURE__*/_jsx(TaskItem,{children:task.text},task.id);})});}var content=taskList;if(props.error){content=/*#__PURE__*/_jsx(\"button\",{onClick:props.onFetch,children:\"Try again\"});}if(props.loading){content='Loading tasks...';}return/*#__PURE__*/_jsx(Section,{children:/*#__PURE__*/_jsx(\"div\",{className:classes.container,children:content})});};export default Tasks;","map":{"version":3,"sources":["/home/cedcoss/Desktop/MyApp/liquidTestApp/src/components/Tasks/Tasks.js"],"names":["Section","TaskItem","classes","Tasks","props","taskList","items","length","map","task","text","id","content","error","onFetch","loading","container"],"mappings":"AAAA,MAAOA,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,C,2CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACvB,GAAIC,CAAAA,QAAQ,cAAG,0DAAf,CAEA,GAAID,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAqB,CAAzB,CAA4B,CAC1BF,QAAQ,cACN,oBACGD,KAAK,CAACE,KAAN,CAAYE,GAAZ,CAAgB,SAACC,IAAD,qBACf,KAAC,QAAD,WAAyBA,IAAI,CAACC,IAA9B,EAAeD,IAAI,CAACE,EAApB,CADe,EAAhB,CADH,EADF,CAOD,CAED,GAAIC,CAAAA,OAAO,CAAGP,QAAd,CAEA,GAAID,KAAK,CAACS,KAAV,CAAiB,CACfD,OAAO,cAAG,eAAQ,OAAO,CAAER,KAAK,CAACU,OAAvB,uBAAV,CACD,CAED,GAAIV,KAAK,CAACW,OAAV,CAAmB,CACjBH,OAAO,CAAG,kBAAV,CACD,CAED,mBACE,KAAC,OAAD,wBACE,YAAK,SAAS,CAAEV,OAAO,CAACc,SAAxB,UAAoCJ,OAApC,EADF,EADF,CAKD,CA5BD,CA8BA,cAAeT,CAAAA,KAAf","sourcesContent":["import Section from '../UI/Section';\nimport TaskItem from './TaskItem';\nimport classes from './Tasks.module.css';\n\nconst Tasks = (props) => {\n  let taskList = <h2>No tasks found. Start adding some!</h2>;\n\n  if (props.items.length > 0) {\n    taskList = (\n      <ul>\n        {props.items.map((task) => (\n          <TaskItem key={task.id}>{task.text}</TaskItem>\n        ))}\n      </ul>\n    );\n  }\n\n  let content = taskList;\n\n  if (props.error) {\n    content = <button onClick={props.onFetch}>Try again</button>;\n  }\n\n  if (props.loading) {\n    content = 'Loading tasks...';\n  }\n\n  return (\n    <Section>\n      <div className={classes.container}>{content}</div>\n    </Section>\n  );\n};\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}