{"ast":null,"code":"var _jsxFileName = \"/home/cedcoss/Downloads/liquidTestApp/src/components/Test/Questions.js\",\n    _s = $RefreshSig$();\n\nimport QuesItem from \"./QuesItem\";\nimport SectionMedium from '../UI/SectionMedium';\nimport classes from '../UI/Card.module.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Questions = props => {\n  _s();\n\n  const questions = props.questions;\n  const currentQues = props.quesNum;\n  const question = questions[currentQues];\n  const [formSubmit, setFormSubmit] = useState(false);\n\n  const getSelectedOption = value => {\n    props.setAns(value);\n  };\n\n  const content = /*#__PURE__*/_jsxDEV(QuesItem, {\n    ques: question,\n    index: currentQues,\n    setOption: getSelectedOption\n  }, currentQues, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 21\n  }, this);\n\n  const formHandler = _event => {\n    _event.preventDefault();\n\n    if (props.quesNum + 1 < questions.length) {\n      props.setQuesNum(props.quesNum + 1);\n      console.log(\"submit\", props.quesNum);\n    } else {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formHandler,\n    children: /*#__PURE__*/_jsxDEV(SectionMedium, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: currentQues === questions.length - 1 ? \"Submit\" : \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Questions, \"ifQmekddduw2PiNLCDL1bzDM87Q=\");\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/home/cedcoss/Downloads/liquidTestApp/src/components/Test/Questions.js"],"names":["QuesItem","SectionMedium","classes","useState","Questions","props","questions","currentQues","quesNum","question","formSubmit","setFormSubmit","getSelectedOption","value","setAns","content","formHandler","_event","preventDefault","length","setQuesNum","console","log","container"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAMC,SAAS,GAAGD,KAAK,CAACC,SAAxB;AACA,QAAMC,WAAW,GAAGF,KAAK,CAACG,OAA1B;AACA,QAAMC,QAAQ,GAAGH,SAAS,CAACC,WAAD,CAA1B;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMS,iBAAiB,GAAIC,KAAD,IAAW;AACjCR,IAAAA,KAAK,CAACS,MAAN,CAAaD,KAAb;AACH,GAFD;;AAIA,QAAME,OAAO,gBAAG,QAAC,QAAD;AAA4B,IAAA,IAAI,EAAEN,QAAlC;AAA4C,IAAA,KAAK,EAAEF,WAAnD;AAAgE,IAAA,SAAS,EAAEK;AAA3E,KAAeL,WAAf;AAAA;AAAA;AAAA;AAAA,UAAhB;;AACA,QAAMS,WAAW,GAAIC,MAAD,IAAY;AAC5BA,IAAAA,MAAM,CAACC,cAAP;;AACA,QAAGb,KAAK,CAACG,OAAN,GAAc,CAAd,GAAkBF,SAAS,CAACa,MAA/B,EAAsC;AAClCd,MAAAA,KAAK,CAACe,UAAN,CAAiBf,KAAK,CAACG,OAAN,GAAc,CAA/B;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBjB,KAAK,CAACG,OAA3B;AACH,KAHD,MAII,CAEH;AACJ,GATD;;AAaA,sBACI;AAAM,IAAA,QAAQ,EAAEQ,WAAhB;AAAA,2BACI,QAAC,aAAD;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEd,OAAO,CAACqB,SAAxB;AAAA,kBAAoCR;AAApC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEK;AAAA,kBAASR,WAAW,KAAKD,SAAS,CAACa,MAAV,GAAiB,CAAjC,GAAqC,QAArC,GAAgD;AAAzD;AAAA;AAAA;AAAA;AAAA,cAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAhCD;;GAAMf,S;;KAAAA,S;AAkCN,eAAeA,SAAf","sourcesContent":["import QuesItem from \"./QuesItem\";\nimport SectionMedium from '../UI/SectionMedium';\nimport classes from '../UI/Card.module.css';\nimport { useState } from \"react\";\nconst Questions = (props) => {\n    const questions = props.questions;\n    const currentQues = props.quesNum;\n    const question = questions[currentQues];\n    const [formSubmit, setFormSubmit] = useState(false);\n\n    const getSelectedOption = (value) => {\n        props.setAns(value);\n    }\n\n    const content = <QuesItem key={currentQues} ques={question} index={currentQues} setOption={getSelectedOption}/>;\n    const formHandler = (_event) => {\n        _event.preventDefault();\n        if(props.quesNum+1 < questions.length){\n            props.setQuesNum(props.quesNum+1);\n            console.log(\"submit\",props.quesNum);\n        }\n        else{\n            \n        }\n    }\n\n    \n\n    return(\n        <form onSubmit={formHandler}>\n            <SectionMedium>\n                <div className={classes.container}>{content}</div>\n                {<button>{currentQues === questions.length-1 ? \"Submit\" : \"Next\"}</button>}\n            </SectionMedium>\n        </form>\n        );\n}\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}