{"ast":null,"code":"import _toConsumableArray from\"/home/cedcoss/Desktop/MyApp/liquidTestApp/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"/home/cedcoss/Desktop/MyApp/liquidTestApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/cedcoss/Desktop/MyApp/liquidTestApp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/cedcoss/Desktop/MyApp/liquidTestApp/node_modules/@babel/runtime/regenerator/index.js\";import Questions from\"./Questions\";import React,{useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var Questionaire=function Questionaire(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),quesNum=_useState2[0],setQuesNum=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),answers=_useState4[0],setAnswers=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),questions=_useState6[0],setQuestions=_useState6[1];var fetchQues=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(taskText){var response,data,loadedQuestions,quesKey;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch('https://react-app-38291-default-rtdb.firebaseio.com/questions.json');case 3:response=_context.sent;if(response.ok){_context.next=6;break;}throw new Error('Request failed!');case 6:_context.next=8;return response.json();case 8:data=_context.sent;loadedQuestions=[];for(quesKey in data){loadedQuestions.push({id:quesKey,question:data[quesKey].data});}setQuestions(loadedQuestions);_context.next=16;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);case 16:case\"end\":return _context.stop();}}},_callee,null,[[0,14]]);}));return function fetchQues(_x){return _ref.apply(this,arguments);};}();useEffect(function(){fetchQues();},[]);var questionsHandler=function questionsHandler(num){setQuesNum(num);};var answersHandler=function answersHandler(ans){setAnswers([ans].concat(_toConsumableArray(answers)));};return/*#__PURE__*/_jsx(React.Fragment,{children:questions.length>0?/*#__PURE__*/_jsx(Questions,{questions:questions,setQuesNum:questionsHandler,quesNum:quesNum,setAns:answersHandler,ans:answers}):\"\"});};export default Questionaire;","map":{"version":3,"sources":["/home/cedcoss/Desktop/MyApp/liquidTestApp/src/components/Test/Questionaire.js"],"names":["Questions","React","useState","useEffect","Questionaire","quesNum","setQuesNum","answers","setAnswers","questions","setQuestions","fetchQues","taskText","fetch","response","ok","Error","json","data","loadedQuestions","quesKey","push","id","question","questionsHandler","num","answersHandler","ans","length"],"mappings":"ugBACA,MAAOA,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,C,2CACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvB,cAA+BF,QAAQ,CAAC,CAAD,CAAvC,wCAAOG,OAAP,eAAgBC,UAAhB,eACA,eAA8BJ,QAAQ,CAAC,EAAD,CAAtC,yCAAOK,OAAP,eAAgBC,UAAhB,eACA,eAAkCN,QAAQ,CAAC,EAAD,CAA1C,yCAAOO,SAAP,eAAkBC,YAAlB,eAEA,GAAMC,CAAAA,SAAS,0FAAG,iBAAOC,QAAP,kMAESC,CAAAA,KAAK,CACxB,oEADwB,CAFd,QAERC,QAFQ,kBAMTA,QAAQ,CAACC,EANA,8BAOJ,IAAIC,CAAAA,KAAJ,CAAU,iBAAV,CAPI,8BAUKF,CAAAA,QAAQ,CAACG,IAAT,EAVL,QAURC,IAVQ,eAYRC,eAZQ,CAYU,EAZV,CAcd,IAAWC,OAAX,GAAsBF,CAAAA,IAAtB,CAA4B,CACxBC,eAAe,CAACE,IAAhB,CAAqB,CAAEC,EAAE,CAAEF,OAAN,CAAeG,QAAQ,CAAEL,IAAI,CAACE,OAAD,CAAJ,CAAcF,IAAvC,CAArB,EACH,CACDR,YAAY,CAACS,eAAD,CAAZ,CAjBc,sJAAH,kBAATR,CAAAA,SAAS,4CAAf,CAuBAR,SAAS,CAAC,UAAM,CACZQ,SAAS,GACZ,CAFQ,CAEN,EAFM,CAAT,CAGA,GAAMa,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,GAAD,CAAS,CAC9BnB,UAAU,CAACmB,GAAD,CAAV,CACH,CAFD,CAGA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,GAAD,CAAS,CAC5BnB,UAAU,EAAEmB,GAAF,4BAAUpB,OAAV,GAAV,CACH,CAFD,CAGA,mBACI,KAAC,KAAD,CAAO,QAAP,WACME,SAAS,CAACmB,MAAV,CAAmB,CAAnB,cAAuB,KAAC,SAAD,EAAW,SAAS,CAAEnB,SAAtB,CAAiC,UAAU,CAAEe,gBAA7C,CAA+D,OAAO,CAAEnB,OAAxE,CAAiF,MAAM,CAAEqB,cAAzF,CAAyG,GAAG,CAAEnB,OAA9G,EAAvB,CAAkJ,EADxJ,EADJ,CAKH,CA1CD,CA4CA,cAAeH,CAAAA,YAAf","sourcesContent":["\nimport Questions from \"./Questions\";\nimport React, { useState, useEffect } from \"react\";\nconst Questionaire = () => {\n    const [quesNum, setQuesNum] =  useState(0);\n    const [answers, setAnswers] = useState([]);\n    const [questions, setQuestions] = useState([]);\n\n    const fetchQues = async (taskText) => {\n        try {\n        const response = await fetch(\n            'https://react-app-38291-default-rtdb.firebaseio.com/questions.json'\n        );\n\n        if (!response.ok) {\n            throw new Error('Request failed!');\n        }\n\n        const data = await response.json();\n\n        const loadedQuestions = [];\n\n        for (const quesKey in data) {\n            loadedQuestions.push({ id: quesKey, question: data[quesKey].data });\n        }\n        setQuestions(loadedQuestions);\n        } catch (err) {\n          //setError(err.message || 'Something went wrong!');\n        }\n    };\n\n    useEffect(() => {\n        fetchQues();\n    }, []);\n    const questionsHandler = (num) => {\n        setQuesNum(num);\n    }\n    const answersHandler = (ans) => {\n        setAnswers([ans, ...answers]);\n    }\n    return(\n        <React.Fragment>\n            { questions.length > 0 ? <Questions questions={questions} setQuesNum={questionsHandler} quesNum={quesNum} setAns={answersHandler} ans={answers}/> : \"\"}\n        </React.Fragment>\n    );\n}\n\nexport default Questionaire;"]},"metadata":{},"sourceType":"module"}