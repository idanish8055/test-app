{"ast":null,"code":"import _asyncToGenerator from\"/home/cedcoss/Desktop/MyApp/liquidTestApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/cedcoss/Desktop/MyApp/liquidTestApp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/cedcoss/Desktop/MyApp/liquidTestApp/node_modules/@babel/runtime/regenerator/index.js\";import React,{useEffect,useState}from\"react\";import Tasks from\"./Tasks\";import NewTask from\"../NewTask/NewTask\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TaskList=function TaskList(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),tasks=_useState6[0],setTasks=_useState6[1];var fetchTasks=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(taskText){var response,data,loadedTasks,taskKey;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsLoading(true);setError(null);_context.prev=2;_context.next=5;return fetch('https://react-app-38291-default-rtdb.firebaseio.com/tasks.json');case 5:response=_context.sent;if(response.ok){_context.next=8;break;}throw new Error('Request failed!');case 8:_context.next=10;return response.json();case 10:data=_context.sent;loadedTasks=[];for(taskKey in data){loadedTasks.push({id:taskKey,text:data[taskKey].text});}setTasks(loadedTasks);_context.next=19;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](2);setError(_context.t0.message||'Something went wrong!');case 19:setIsLoading(false);case 20:case\"end\":return _context.stop();}}},_callee,null,[[2,16]]);}));return function fetchTasks(_x){return _ref.apply(this,arguments);};}();useEffect(function(){fetchTasks();},[]);var taskAddHandler=function taskAddHandler(task){setTasks(function(prevTasks){return prevTasks.concat(task);});};return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(NewTask,{onAddTask:taskAddHandler}),/*#__PURE__*/_jsx(Tasks,{items:tasks,loading:isLoading,error:error,onFetch:fetchTasks})]});};export default TaskList;","map":{"version":3,"sources":["/home/cedcoss/Desktop/MyApp/liquidTestApp/src/components/Tasks/TaskList.js"],"names":["React","useEffect","useState","Tasks","NewTask","TaskList","isLoading","setIsLoading","error","setError","tasks","setTasks","fetchTasks","taskText","fetch","response","ok","Error","json","data","loadedTasks","taskKey","push","id","text","message","taskAddHandler","task","prevTasks","concat"],"mappings":"gYAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,cAAkCH,QAAQ,CAAC,KAAD,CAA1C,wCAAOI,SAAP,eAAkBC,YAAlB,eACA,eAA0BL,QAAQ,CAAC,IAAD,CAAlC,yCAAOM,KAAP,eAAcC,QAAd,eACA,eAA0BP,QAAQ,CAAC,EAAD,CAAlC,yCAAOQ,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,UAAU,0FAAG,iBAAOC,QAAP,wJACfN,YAAY,CAAC,IAAD,CAAZ,CACAE,QAAQ,CAAC,IAAD,CAAR,CAFe,sCAIQK,CAAAA,KAAK,CACxB,gEADwB,CAJb,QAITC,QAJS,kBAQVA,QAAQ,CAACC,EARC,8BASL,IAAIC,CAAAA,KAAJ,CAAU,iBAAV,CATK,+BAYIF,CAAAA,QAAQ,CAACG,IAAT,EAZJ,SAYTC,IAZS,eAcTC,WAdS,CAcK,EAdL,CAgBf,IAAWC,OAAX,GAAsBF,CAAAA,IAAtB,CAA4B,CACxBC,WAAW,CAACE,IAAZ,CAAiB,CAAEC,EAAE,CAAEF,OAAN,CAAeG,IAAI,CAAEL,IAAI,CAACE,OAAD,CAAJ,CAAcG,IAAnC,CAAjB,EACH,CAEDb,QAAQ,CAACS,WAAD,CAAR,CApBe,iFAsBfX,QAAQ,CAAC,YAAIgB,OAAJ,EAAe,uBAAhB,CAAR,CAtBe,QAwBflB,YAAY,CAAC,KAAD,CAAZ,CAxBe,qEAAH,kBAAVK,CAAAA,UAAU,4CAAhB,CA2BAX,SAAS,CAAC,UAAM,CACZW,UAAU,GACb,CAFQ,CAEN,EAFM,CAAT,CAGA,GAAMc,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,IAAD,CAAU,CAC7BhB,QAAQ,CAAC,SAACiB,SAAD,QAAeA,CAAAA,SAAS,CAACC,MAAV,CAAiBF,IAAjB,CAAf,EAAD,CAAR,CACH,CAFD,CAIA,mBACI,MAAC,KAAD,CAAO,QAAP,yBACI,KAAC,OAAD,EAAS,SAAS,CAAED,cAApB,EADJ,cAEI,KAAC,KAAD,EACA,KAAK,CAAEhB,KADP,CAEA,OAAO,CAAEJ,SAFT,CAGA,KAAK,CAAEE,KAHP,CAIA,OAAO,CAAEI,UAJT,EAFJ,GADJ,CAWH,CAlDD,CAoDA,cAAeP,CAAAA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Tasks from \"./Tasks\";\nimport NewTask from \"../NewTask/NewTask\";\n\nconst TaskList = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [tasks, setTasks] = useState([]);\n\n    const fetchTasks = async (taskText) => {\n        setIsLoading(true);\n        setError(null);\n        try {\n        const response = await fetch(\n            'https://react-app-38291-default-rtdb.firebaseio.com/tasks.json'\n        );\n\n        if (!response.ok) {\n            throw new Error('Request failed!');\n        }\n\n        const data = await response.json();\n\n        const loadedTasks = [];\n\n        for (const taskKey in data) {\n            loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n        }\n\n        setTasks(loadedTasks);\n        } catch (err) {\n        setError(err.message || 'Something went wrong!');\n        }\n        setIsLoading(false);\n    };\n\n    useEffect(() => {\n        fetchTasks();\n    }, []);\n    const taskAddHandler = (task) => {\n        setTasks((prevTasks) => prevTasks.concat(task));\n    };\n\n    return(\n        <React.Fragment>\n            <NewTask onAddTask={taskAddHandler} />\n            <Tasks\n            items={tasks}\n            loading={isLoading}\n            error={error}\n            onFetch={fetchTasks}\n            />\n        </React.Fragment>\n    );\n}\n\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}