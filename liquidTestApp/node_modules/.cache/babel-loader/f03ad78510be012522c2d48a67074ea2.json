{"ast":null,"code":"var _jsxFileName = \"/home/cedcoss/Desktop/test-app/liquidTestApp/src/components/Admin/AdminDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport AddQuestionForm from \"./AddQuestionForm\";\nimport QuestionListing from \"./QuestionListing\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminDashboard = () => {\n  _s();\n\n  const [enableForm, setEnableForm] = useState(true);\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const search = window.location.search;\n  useEffect(() => {\n    if (search.includes(\"danish\") || search.includes(\"shubham\")) {\n      setEnableForm(true);\n    }\n  }, [search]);\n\n  const addQuestionHandler = async data => {\n    try {\n      const response = await fetch('https://react-app-38291-default-rtdb.firebaseio.com/questions.json', {\n        method: 'POST',\n        body: JSON.stringify({\n          data\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const res = await response.json();\n      console.log(res);\n      setSuccess(true);\n      setTimeout(() => {\n        setSuccess(false);\n      }, 3000);\n    } catch (err) {\n      setError(true);\n      setTimeout(() => {\n        setError(false);\n      }, 3000);\n    }\n  };\n\n  const isError = error ? \"error\" : \"\";\n  const isSuccess = success ? \"success\" : \"\";\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hello Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), enableForm ? /*#__PURE__*/_jsxDEV(AddQuestionForm, {\n      addQuestion: addQuestionHandler,\n      errorMsg: isError,\n      successMsg: isSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 31\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(QuestionListing, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 13\n  }, this);\n};\n\n_s(AdminDashboard, \"2FT+PnmoFE8gOYpbj6V8B8d296Q=\");\n\n_c = AdminDashboard;\nexport default AdminDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"sources":["/home/cedcoss/Desktop/test-app/liquidTestApp/src/components/Admin/AdminDashboard.js"],"names":["React","useEffect","useState","AddQuestionForm","QuestionListing","AdminDashboard","enableForm","setEnableForm","error","setError","success","setSuccess","search","window","location","includes","addQuestionHandler","data","response","fetch","method","body","JSON","stringify","headers","ok","Error","res","json","console","log","setTimeout","err","isError","isSuccess"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMU,MAAM,GAAGC,MAAM,CAACC,QAAP,CAAgBF,MAA/B;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGW,MAAM,CAACG,QAAP,CAAgB,QAAhB,KAA6BH,MAAM,CAACG,QAAP,CAAgB,SAAhB,CAAhC,EAA2D;AACvDR,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,GAJQ,EAIN,CAACK,MAAD,CAJM,CAAT;;AAMA,QAAMI,kBAAkB,GAAG,MAAOC,IAAP,IAAgB;AACvC,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oEAD0B,EAE1B;AACEC,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,UAAAA;AAAF,SAAf,CAFR;AAGEO,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHX,OAF0B,CAA5B;;AAWA,UAAI,CAACN,QAAQ,CAACO,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMC,GAAG,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAhB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAoB,MAAAA,UAAU,CAAC,MAAM;AACbpB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAFS,EAEP,IAFO,CAAV;AAIH,KAvBD,CAuBE,OAAOqB,GAAP,EAAY;AACVvB,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAsB,MAAAA,UAAU,CAAC,MAAM;AACbtB,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,OAFS,EAEP,IAFO,CAAV;AAGH;AACJ,GA9BD;;AA+BA,QAAMwB,OAAO,GAAGzB,KAAK,GAAG,OAAH,GAAa,EAAlC;AACA,QAAM0B,SAAS,GAAGxB,OAAO,GAAG,SAAH,GAAe,EAAxC;AAEA,sBACQ,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKJ,UAAU,gBAAG,QAAC,eAAD;AAAiB,MAAA,WAAW,EAAEU,kBAA9B;AAAkD,MAAA,QAAQ,EAAEiB,OAA5D;AAAqE,MAAA,UAAU,EAAEC;AAAjF;AAAA;AAAA;AAAA;AAAA,YAAH,GAAoG,EAFnH,eAGI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAOH,CArDD;;GAAM7B,c;;KAAAA,c;AAuDN,eAAeA,cAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport AddQuestionForm from \"./AddQuestionForm\";\nimport QuestionListing from \"./QuestionListing\";\n\nconst AdminDashboard = () => {\n    const [enableForm, setEnableForm] = useState(true);\n    const [error, setError] = useState(false);\n    const [success, setSuccess] = useState(false);\n\n    const search = window.location.search;\n    useEffect(() => {\n        if(search.includes(\"danish\") || search.includes(\"shubham\")){\n            setEnableForm(true);\n        }\n    }, [search]);\n    \n    const addQuestionHandler = async (data) => {\n        try {\n            const response = await fetch(\n              'https://react-app-38291-default-rtdb.firebaseio.com/questions.json',\n              {\n                method: 'POST',\n                body: JSON.stringify({ data }),\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n              }\n            );\n      \n            if (!response.ok) {\n              throw new Error('Request failed!');\n            }\n      \n            const res = await response.json();\n            console.log(res);\n            setSuccess(true);\n            setTimeout(() => {\n                setSuccess(false);\n            }, 3000);\n            \n        } catch (err) {\n            setError(true);\n            setTimeout(() => {\n                setError(false);\n            }, 3000);\n        }\n    }\n    const isError = error ? \"error\" : \"\";\n    const isSuccess = success ? \"success\" : \"\";\n\n    return(\n            <React.Fragment>\n                <h2>Hello Admin</h2>\n                {enableForm ? <AddQuestionForm addQuestion={addQuestionHandler} errorMsg={isError} successMsg={isSuccess} /> : \"\"}\n                <QuestionListing/>\n            </React.Fragment>\n        );\n}\n\nexport default AdminDashboard;"]},"metadata":{},"sourceType":"module"}