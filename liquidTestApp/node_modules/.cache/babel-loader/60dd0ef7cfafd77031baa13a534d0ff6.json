{"ast":null,"code":"import _asyncToGenerator from\"/home/cedcoss/Desktop/MyApp/liquidTestApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/cedcoss/Desktop/MyApp/liquidTestApp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/cedcoss/Desktop/MyApp/liquidTestApp/node_modules/@babel/runtime/regenerator/index.js\";import{useState}from'react';import Section from'../UI/Section';import TaskForm from'./TaskForm';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NewTask=function NewTask(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var enterTaskHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(taskText){var response,data,generatedId,createdTask;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsLoading(true);setError(null);_context.prev=2;_context.next=5;return fetch('https://react-app-38291-default-rtdb.firebaseio.com/tasks.json',{method:'POST',body:JSON.stringify({text:taskText}),headers:{'Content-Type':'application/json'}});case 5:response=_context.sent;if(response.ok){_context.next=8;break;}throw new Error('Request failed!');case 8:_context.next=10;return response.json();case 10:data=_context.sent;generatedId=data.name;// firebase-specific => \"name\" contains generated id\ncreatedTask={id:generatedId,text:taskText};props.onAddTask(createdTask);_context.next=19;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](2);setError(_context.t0.message||'Something went wrong!');case 19:setIsLoading(false);case 20:case\"end\":return _context.stop();}}},_callee,null,[[2,16]]);}));return function enterTaskHandler(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Section,{children:[/*#__PURE__*/_jsx(TaskForm,{onEnterTask:enterTaskHandler,loading:isLoading}),error&&/*#__PURE__*/_jsx(\"p\",{children:error})]});};export default NewTask;","map":{"version":3,"sources":["/home/cedcoss/Desktop/MyApp/liquidTestApp/src/components/NewTask/NewTask.js"],"names":["useState","Section","TaskForm","NewTask","props","isLoading","setIsLoading","error","setError","enterTaskHandler","taskText","fetch","method","body","JSON","stringify","text","headers","response","ok","Error","json","data","generatedId","name","createdTask","id","onAddTask","message"],"mappings":"gYAAA,OAASA,QAAT,KAAyB,OAAzB,CAEA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACzB,cAAkCJ,QAAQ,CAAC,KAAD,CAA1C,wCAAOK,SAAP,eAAkBC,YAAlB,eACA,eAA0BN,QAAQ,CAAC,IAAD,CAAlC,yCAAOO,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,gBAAgB,0FAAG,iBAAOC,QAAP,4JACvBJ,YAAY,CAAC,IAAD,CAAZ,CACAE,QAAQ,CAAC,IAAD,CAAR,CAFuB,sCAIEG,CAAAA,KAAK,CAC1B,gEAD0B,CAE1B,CACEC,MAAM,CAAE,MADV,CAEEC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEC,IAAI,CAAEN,QAAR,CAAf,CAFR,CAGEO,OAAO,CAAE,CACP,eAAgB,kBADT,CAHX,CAF0B,CAJP,QAIfC,QAJe,kBAehBA,QAAQ,CAACC,EAfO,8BAgBb,IAAIC,CAAAA,KAAJ,CAAU,iBAAV,CAhBa,+BAmBFF,CAAAA,QAAQ,CAACG,IAAT,EAnBE,SAmBfC,IAnBe,eAqBfC,WArBe,CAqBDD,IAAI,CAACE,IArBJ,CAqBU;AACzBC,WAtBe,CAsBD,CAAEC,EAAE,CAAEH,WAAN,CAAmBP,IAAI,CAAEN,QAAzB,CAtBC,CAwBrBN,KAAK,CAACuB,SAAN,CAAgBF,WAAhB,EAxBqB,iFA0BrBjB,QAAQ,CAAC,YAAIoB,OAAJ,EAAe,uBAAhB,CAAR,CA1BqB,QA4BvBtB,YAAY,CAAC,KAAD,CAAZ,CA5BuB,qEAAH,kBAAhBG,CAAAA,gBAAgB,4CAAtB,CA+BA,mBACE,MAAC,OAAD,yBACE,KAAC,QAAD,EAAU,WAAW,CAAEA,gBAAvB,CAAyC,OAAO,CAAEJ,SAAlD,EADF,CAEGE,KAAK,eAAI,mBAAIA,KAAJ,EAFZ,GADF,CAMD,CAzCD,CA2CA,cAAeJ,CAAAA,OAAf","sourcesContent":["import { useState } from 'react';\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\n\nconst NewTask = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const enterTaskHandler = async (taskText) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        'https://react-app-38291-default-rtdb.firebaseio.com/tasks.json',\n        {\n          method: 'POST',\n          body: JSON.stringify({ text: taskText }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}